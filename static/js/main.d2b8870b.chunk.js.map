{"version":3,"sources":["top/top.js","components/sidebar.js","components/card.js","App.js","config.js","reportWebVitals.js","index.js"],"names":["Top","className","Sidebar","props","useState","value","setValue","onSubmit","event","preventDefault","zipCode","zipcode","data","type","onChange","target","Card","arr","weather","undefined","console","log","alt","src","App","weatherData","setWeatherState","findCity","a","x","url","request","error","res","body","JSON","parse","cod","main","temp","name","icon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0oBAMeA,EAJH,WACV,OAAO,qBAAKC,UAAU,uBAAf,0BC4BMC,G,OA5BC,SAACC,GACf,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAYA,OACE,qBAAKL,UAAU,cAAf,SACE,uBAAMM,SATY,SAACC,GACrBA,EAAMC,iBACN,IAAMC,EAAU,CAAEC,QAASN,GAE3BF,EAAMS,KAAKF,IAKT,UACE,kCACG,IACD,uBAAOG,KAAK,OAAOR,MAAOA,EAAOS,SAhBzB,SAACN,GACfF,EAASE,EAAMO,OAAOV,aAiBlB,wBAAQQ,KAAK,SAASZ,UAAU,SAAhC,2BCCOe,G,OAvBF,SAACb,GACZ,IAAMc,EACgB,0BAApBd,EAAMe,eAAwCC,EAAYhB,EAAMe,UAElE,OADAE,QAAQC,IAAIJ,QACGE,IAARF,EACL,qBAAKhB,UAAU,KAAf,0CAEA,qBAAKA,UAAU,6CAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,2BAAf,SAA2CgB,EAAI,KAC/C,qBAAKhB,UAAU,MAAf,SACE,qBACEA,UAAU,6BACVqB,IAAI,GACJC,IAAG,2CAAsCN,EAAI,GAA1C,eAGP,sBAAKhB,UAAU,2BAAf,UAA2CgB,EAAI,GAA/C,qBCsCOO,MAhDf,WACE,MAAuCpB,mBAAS,yBAAhD,mBAAOqB,EAAP,KAAoBC,EAApB,KACMC,EAAQ,uCAAG,WAAOxB,GAAP,iBAAAyB,EAAA,8DACDT,IAAVhB,EADW,iDAIP0B,EAAI1B,EAAMQ,QAEVmB,EACJ,8DAAuDD,EAAvD,6BCjBM,mCDoBRE,IAAQD,GAAK,SAAUE,EAAOC,EAAKC,GACjC,IAAML,EAAIM,KAAKC,MAAMF,GACrBd,QAAQC,IAAIW,GAEZN,EAAgBG,MAdL,2CAAH,sDAmCd,OADAT,QAAQC,IAAII,GAEV,sBAAKxB,UAAU,8CAAf,UACE,qBAAKA,UAAU,SAAf,SACE,cAAC,EAAD,MAEF,cAAC,EAAD,CAASA,UAAU,GAAGW,KAAMe,IAC5B,cAAC,EAAD,CAAMT,QAtBU,WAClB,MACkB,0BAAhBO,GACgB,OAAhBA,GACoB,QAApBA,EAAYY,IAKL,CAHMZ,EAAYa,KAAKC,KACbd,EAAYe,KAChBf,EAAYP,QAAQ,GAAGuB,MAG7B,+BE5BEC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d2b8870b.chunk.js","sourcesContent":["import \"./top.css\";\n\nconst Top = () => {\n  return <div className=\"  header tc ph4 br3 \">Weather App</div>;\n};\n\nexport default Top;\n","import { useState } from \"react\";\nimport \"./sidebar.css\";\n\nconst Sidebar = (props) => {\n  const [value, setValue] = useState(\"\");\n  const zipCode = (event) => {\n    setValue(event.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const zipCode = { zipcode: value };\n\n    props.data(zipCode);\n  };\n\n  return (\n    <div className=\"sidebar tc \">\n      <form onSubmit={submitHandler}>\n        <label>\n          {\" \"}\n          <input type=\"text\" value={value} onChange={zipCode}></input>\n        </label>\n        <button type=\"submit\" className=\"button\">\n          submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import \"./card.css\";\nconst Card = (props) => {\n  const arr =\n    props.weather() === \"no weather to display\" ? undefined : props.weather();\n  console.log(arr);\n  return arr === undefined ? (\n    <div className=\"tc\">Please enter a valid ZipCode</div>\n  ) : (\n    <div className=\" center w-50 br4 db ba b--black-10 bg-gray\">\n      <div className=\" pl2 items-column\">\n        <div className=\" pr2 tc city washed-blue\">{arr[1]}</div>\n        <div className=\"pl5\">\n          <img\n            className=\" pr4 pl4 icon bg-black br4\"\n            alt=\"\"\n            src={`http://openweathermap.org/img/wn/${arr[2]}@2x.png`}\n          ></img>\n        </div>\n        <div className=\" pr2 tc temp washed-blue\">{arr[0]} degrees</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import \"./App.css\";\nimport \"tachyons\";\nimport myKey from \"./config.js\";\nimport request from \"request\";\nimport { useState } from \"react\";\nimport Top from \"./top/top.js\";\nimport Sidebar from \"./components/sidebar.js\";\nimport Card from \"./components/card.js\";\nfunction App() {\n  const [weatherData, setWeatherState] = useState(\"no weather to display\");\n  const findCity = async (props) => {\n    if (props === undefined) {\n      return;\n    } else {\n      const x = props.zipcode;\n\n      const url =\n        `https://api.openweathermap.org/data/2.5/weather?zip=${x},us&units=imperial&appid=` +\n        myKey;\n\n      request(url, function (error, res, body) {\n        const x = JSON.parse(body);\n        console.log(error);\n\n        setWeatherState(x);\n      });\n    }\n  };\n\n  const temperature = () => {\n    if (\n      weatherData !== \"no weather to display\" &&\n      weatherData !== null &&\n      weatherData.cod !== \"400\"\n    ) {\n      const temp = weatherData.main.temp;\n      const cityName = weatherData.name;\n      const icon = weatherData.weather[0].icon;\n      return [temp, cityName, icon];\n    } else {\n      return \"no weather to display\"; // I can make an array here and check the length in\n      // the card to decide what to display\n    }\n  };\n  console.log(weatherData);\n  return (\n    <div className=\"mw5 mw7-ns center bg-light-gray pa3 ph5-ns \">\n      <div className=\"center\">\n        <Top></Top>\n      </div>\n      <Sidebar className=\"\" data={findCity}></Sidebar>\n      <Card weather={temperature}></Card>\n    </div>\n  );\n}\n\nexport default App;\n","const myKey = \"56ef537d238ede2db0841928d59d3e33\";\n\nexport default myKey;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}